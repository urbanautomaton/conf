#!/usr/bin/env bash

function __env_hooker_command_exists() {
  type -t "$1" >/dev/null
}

function __env_hooker_add_env_handler() {
  local handler=$1
  readonly handler

  if [[ -n "$__ENV_HOOKER_HANDLERS" ]]; then
    __ENV_HOOKER_HANDLERS="$__ENV_HOOKER_HANDLERS && $handler"
  else
    __ENV_HOOKER_HANDLERS=$handler
  fi
}

function __env_hooker_run_env_hook {
  local hook_file=$1
  local hook_function_root=$2
  local enter_hook=enter_${hook_function_root}
  local exit_hook=exit_${hook_function_root}
  readonly hook_file
  readonly hook_function_root
  readonly enter_hook
  readonly exit_hook


  if [[ ! -n "$hook_file" || ! -n "$hook_function_root" ]]; then
    echo "You must specify both the hook file and the function root!" >&2
    return
  fi

  if ! __env_hooker_command_exists "${enter_hook}" || ! __env_hooker_command_exists "${exit_hook}"; then
    echo "You must define both the ${enter_hook} and ${exit_hook} functions" >&2
    return
  fi

  local current_dir="$PWD"

  until [[ -z "${current_dir}" ]]; do
    if [[ -f "${current_dir}/${hook_file}" ]]; then
      ${enter_hook} "${current_dir}"
      return
    fi

    current_dir="${current_dir%/*}"
  done

  ${exit_hook}
}

function register_env_hook {
  local hook_file=$1
  local hook_function_root=$2
  readonly hook_file
  readonly hook_function_root

  if [[ ! -n "$hook_file" || ! -n "$hook_function_root" ]]; then
    echo "You must specify both the hook file and the function root!" >&2
    return
  fi

  __env_hooker_add_env_handler "__env_hooker_run_env_hook ${hook_file} ${hook_function_root}"
}

function load_env_hooks() {
  local hooks_dir=${1:-~/.env_hooks}
  readonly hooks_dir
  __ENV_HOOKER_HANDLERS=""

  if [[ ! -d "$hooks_dir" ]]; then
    echo "Could not find env hooks directory: ${hooks_dir}"
    return
  fi

  for hook in ~/.env_hooks/*; do
    [[ -e $hook ]] || break
    # shellcheck source=/dev/null
    source "${hook}"
  done

  if [[ -n "$ZSH_VERSION" ]]; then
    if [[ -n "$__ENV_HOOKER_HANDLERS" ]]; then
      preexec_functions+=("$__ENV_HOOKER_HANDLERS")
    fi
  elif [[ -n "$BASH_VERSION" ]]; then
    if [[ -n "$__ENV_HOOKER_HANDLERS" ]]; then
      # shellcheck disable=SC2016
      prompt_test='[[ "$BASH_COMMAND" != "$PROMPT_COMMAND" ]]'
      # shellcheck disable=SC2064
      trap "$prompt_test && $__ENV_HOOKER_HANDLERS" DEBUG
    fi
  fi
}
